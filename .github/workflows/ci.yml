name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# Minimal permissions (quiet GH warnings; principle of least privilege)
permissions:
  contents: read

# Prevent overlapping runs on the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-pip-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          # Pin versions to ensure CI consistency with local dev
          pip install ruff==0.7.4 mypy==1.8.0 pytest pytest-cov coverage

      # Enforce formatting
      - name: Check formatting (ruff format)
        run: ruff format --check .

      - name: Lint (ruff)
        run: ruff check .

      - name: Type check (mypy)
        run: mypy src

      - name: Run tests with coverage
        run: pytest -q --cov=src --cov-report=xml --cov-report=term

      - name: Upload coverage artifact (for PR review)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: error

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: false
          verbose: true
          # For public repos, no token is needed. If Codecov ever requests it:
          # token: ${{ secrets.CODECOV_TOKEN }}
